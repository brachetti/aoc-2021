/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package rb.com.aoc21.day05.app

import com.github.ajalt.clikt.core.CliktCommand
import com.github.ajalt.clikt.parameters.options.default
import com.github.ajalt.clikt.parameters.options.flag
import com.github.ajalt.clikt.parameters.options.option
import com.github.ajalt.clikt.parameters.types.choice
import mu.KotlinLogging

import org.apache.log4j.Level
import org.apache.log4j.LogManager
import rb.com.aoc21.day05.utilities.Fileutils

val logger = KotlinLogging.logger { }

fun readFrom(mode: String): List<String> {
    val filename = when (mode) {
        "example", "input" -> mode
        else -> error("Could not understand mode, valid examples are 'example' and 'input'.")
    }

    return Fileutils.readInput(filename)
}

class App : CliktCommand() {
    val mode: String by option("--mode", "-m", help = "Chose mode").choice("example", "input").default("example")
    val problemArg: String by option("--problem", "-p", help = "Chose problem").choice("1", "2").default("1")
    val verbose: Boolean by option("-v", "--verbose", "--debug", help = "Debug output").flag()
    override fun run() {
        if (verbose) {
            LogManager.getRootLogger().level = Level.DEBUG
        }

        val problem = problemArg.toInt()

        logger.debug { "Starting up ... mode is $mode" }
        val inputData = readFrom(mode)

        val hydrothermalGrid = HydrothermalGrid(inputData)

        hydrothermalGrid solve problem
    }

}

fun main(args: Array<String>) = App().main(args)
